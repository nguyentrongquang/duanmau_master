/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UL;

import DAO.KhoaHocDAO;
import DAO.ThongKeDAO;
import Helper.ShareHelper;
import Model.KhoaHoc;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ntva1
 */
public class ThongKeJInternalFrame extends javax.swing.JInternalFrame {

    ThongKeDAO dao = new ThongKeDAO();
    KhoaHocDAO khdao = new KhoaHocDAO();

    /**
     * Creates new form ThongKeJInternalFrame
     */
    public ThongKeJInternalFrame(int index) {
        initComponents();
        init();
        tabs.setSelectedIndex(index);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        tabs = new javax.swing.JTabbedPane();
        pnlNguoiHoc = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNguoiHoc = new javax.swing.JTable();
        pnlBangDiem = new javax.swing.JPanel();
        pnlKhoaHoc = new javax.swing.JPanel();
        lblKhoaHoc = new javax.swing.JLabel();
        cboKhoaHoc = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBangDiem = new javax.swing.JTable();
        pnlTongHop = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblTongHop = new javax.swing.JTable();
        pnlDoanhThu = new javax.swing.JPanel();
        pnlName = new javax.swing.JPanel();
        lblNam = new javax.swing.JLabel();
        cboNam = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblDoanhThu = new javax.swing.JTable();

        setClosable(true);
        setTitle("TỔNG HỢP - THỐNG KÊ");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 51, 204));
        lblTitle.setText("TỔNG HỢP - THỐNG KÊ");

        tblNguoiHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "NĂM", "SỐ NGƯỜI HỌC", "ĐẦU TIÊN", "SAU CÙNG"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblNguoiHoc);

        javax.swing.GroupLayout pnlNguoiHocLayout = new javax.swing.GroupLayout(pnlNguoiHoc);
        pnlNguoiHoc.setLayout(pnlNguoiHocLayout);
        pnlNguoiHocLayout.setHorizontalGroup(
            pnlNguoiHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
        );
        pnlNguoiHocLayout.setVerticalGroup(
            pnlNguoiHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
        );

        tabs.addTab("NGƯỜI HỌC", pnlNguoiHoc);

        pnlBangDiem.setLayout(new java.awt.BorderLayout());

        pnlKhoaHoc.setLayout(new java.awt.BorderLayout());
        pnlBangDiem.add(pnlKhoaHoc, java.awt.BorderLayout.PAGE_START);

        lblKhoaHoc.setText("KHÓA HỌC");
        pnlBangDiem.add(lblKhoaHoc, java.awt.BorderLayout.LINE_START);

        cboKhoaHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKhoaHocActionPerformed(evt);
            }
        });
        pnlBangDiem.add(cboKhoaHoc, java.awt.BorderLayout.CENTER);

        tblBangDiem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "MÃ NH", "HỌ VÀ TÊN", "ĐIỂM", "XẾP LOẠI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblBangDiem);

        pnlBangDiem.add(jScrollPane2, java.awt.BorderLayout.PAGE_END);

        tabs.addTab("BẢNG ĐIỂM", pnlBangDiem);

        pnlTongHop.setLayout(new java.awt.BorderLayout());

        tblTongHop.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "CHUYÊN ĐỀ", "TỔNG SỐ HV", "CAO NHẤT", "THẤP NHẤT", "ĐIỂM TB"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblTongHop);
        if (tblTongHop.getColumnModel().getColumnCount() > 0) {
            tblTongHop.getColumnModel().getColumn(0).setPreferredWidth(250);
        }

        pnlTongHop.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        tabs.addTab("TỔNG HỢP ĐIỂM", pnlTongHop);

        pnlDoanhThu.setLayout(new java.awt.BorderLayout());

        pnlName.setLayout(new java.awt.BorderLayout());

        lblNam.setText("NĂM");
        pnlName.add(lblNam, java.awt.BorderLayout.LINE_START);

        cboNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNamActionPerformed(evt);
            }
        });
        pnlName.add(cboNam, java.awt.BorderLayout.CENTER);

        pnlDoanhThu.add(pnlName, java.awt.BorderLayout.PAGE_START);

        tblDoanhThu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "CHUYÊN ĐỀ", "SỐ KHÓA", "DOANH THU", "HP CAO NHẤT", "HP THẤP NHẤT", "HP TRUNG BÌNH"
            }
        ));
        jScrollPane4.setViewportView(tblDoanhThu);
        if (tblDoanhThu.getColumnModel().getColumnCount() > 0) {
            tblDoanhThu.getColumnModel().getColumn(0).setPreferredWidth(250);
        }

        pnlDoanhThu.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        tabs.addTab("DOANH THU", pnlDoanhThu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblTitle)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(tabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        fillComboBoxKhoaHoc();
        fillTableBangDiem();
        fillTableNguoiHoc();
        fillTableKhoaHoc();
        fillComboBoxNam();
        fillTableDoanhThu();
    }//GEN-LAST:event_formInternalFrameOpened

    private void cboKhoaHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKhoaHocActionPerformed
        // TODO add your handling code here:
        fillTableBangDiem();
    }//GEN-LAST:event_cboKhoaHocActionPerformed

    private void cboNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNamActionPerformed
        // TODO add your handling code here:
        fillTableDoanhThu();
    }//GEN-LAST:event_cboNamActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboKhoaHoc;
    private javax.swing.JComboBox<String> cboNam;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblKhoaHoc;
    private javax.swing.JLabel lblNam;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlBangDiem;
    private javax.swing.JPanel pnlDoanhThu;
    private javax.swing.JPanel pnlKhoaHoc;
    private javax.swing.JPanel pnlName;
    private javax.swing.JPanel pnlNguoiHoc;
    private javax.swing.JPanel pnlTongHop;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblBangDiem;
    private javax.swing.JTable tblDoanhThu;
    private javax.swing.JTable tblNguoiHoc;
    private javax.swing.JTable tblTongHop;
    // End of variables declaration//GEN-END:variables

     void init() { 
         setFrameIcon(ShareHelper.APP_ICON_1);
    } 
         
    void fillComboBoxKhoaHoc(){ 
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboKhoaHoc.getModel(); 
        model.removeAllElements(); 
 
        List<KhoaHoc> list = khdao.select(); 
        for(KhoaHoc kh : list){ 
            model.addElement(kh); 
        } 
 
        cboKhoaHoc.setSelectedIndex(0); 
    } 
 
    void fillComboBoxNam(){ 
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboNam.getModel(); 
        model.removeAllElements(); 
 
        List<KhoaHoc> list = khdao.select(); 
        for(KhoaHoc kh : list){ 
            int nam = kh.getNgayKG().getYear() + 1900; 
            if(model.getIndexOf(nam) < 0){ 
                model.addElement(nam); 
            } 
        } 
 
        cboNam.setSelectedIndex(0); 
    } 
 
    void fillTableBangDiem(){ 
        DefaultTableModel model = (DefaultTableModel) tblBangDiem.getModel(); 
        model.setRowCount(0); 
 
        KhoaHoc kh = (KhoaHoc) cboKhoaHoc.getSelectedItem(); 
        List<Object[]> list = dao.getBangDiem(kh.getMaKH()); 
        for(Object[] row : list){ 
            model.addRow(row); 
        } 
    } 
 
    void fillTableNguoiHoc(){ 
        DefaultTableModel model = (DefaultTableModel) tblNguoiHoc.getModel(); 
        model.setRowCount(0); 
 
        List<Object[]> list = dao.getNguoiHoc(); 
        for(Object[] row : list){ 
            model.addRow(row); 
        } 
    } 
 
    void fillTableKhoaHoc() { 
        DefaultTableModel model = (DefaultTableModel) tblTongHop.getModel(); 
        model.setRowCount(0); 
 
        List<Object[]> list = dao.getDiemTheoChuyenDe(); 
        for(Object[] row : list){ 
            model.addRow(row); 
        } 
    } 
     
    void fillTableDoanhThu() { 
        DefaultTableModel model = (DefaultTableModel) tblDoanhThu.getModel(); 
        model.setRowCount(0); 
        int nam = Integer.parseInt(cboNam.getSelectedItem().toString()); 
        List<Object[]> list = dao.getDoanhThu(nam); 
        for(Object[] row : list){ 
            model.addRow(row); 
        } 
}
}
